function reg = registry()
% registry  Problem registry keyed by literature names (preferred).
%   Returns an array of structs with fields:
%     - name: problem key (e.g., 'BK1','VU1','SP1')
%     - n: default decision dimension
%     - m: number of objectives
%     - id: optional legacy numeric ID (if applicable; [] otherwise)
%
% Notes (selected):
% - BK1   [BK1996]  Domain: x_i in [-5, 10]
% - VU1   [VU2001]  Domain: x_i in [-3, 3]
% - SP1   (provided) Domain: unbounded
% Additional datasets present (see problems/data): DGO1, DGO2, IKK1, JOS1, etc.

reg = [ ...
  struct('name','IKK1','n',2,  'm',3, 'id',[]); ...
  struct('name','TE8', 'n',2,  'm',3, 'id',[]); ...
  struct('name','MOP5','n',2,  'm',3, 'id',[]); ...
  struct('name','MOP7','n',2,  'm',3, 'id',[]); ...
  struct('name','SLCDT2','n',10, 'm',3, 'id',[]); ...
  % Additional named problems
  struct('name','BK1', 'n',2,  'm',2, 'id',[]); ...
  struct('name','VU1', 'n',2,  'm',2, 'id',[]); ...
  struct('name','SP1', 'n',2,  'm',2, 'id',[]); ...
  struct('name','DGO1','n',1,  'm',2, 'id',[]); ...
  struct('name','DGO2','n',1,  'm',2, 'id',[]); ...
  struct('name','FF1', 'n',2,  'm',2, 'id',[]); ...
  struct('name','SSFYY1','n',2,'m',2, 'id',[]); ...
  struct('name','SSFYY2','n',2,'m',2, 'id',[]); ...
  struct('name','VU2', 'n',2,  'm',2, 'id',[]); ...
  struct('name','VFM1','n',2,  'm',3, 'id',[]); ...
  struct('name','Far1','n',2,  'm',2, 'id',[]); ...
  struct('name','DPAM1','n',3, 'm',2, 'id',[]); ...
  struct('name','FA1', 'n',3,  'm',3, 'id',[]); ...
  struct('name','FES1','n',10, 'm',2, 'id',[]); ...
  struct('name','FES2','n',10, 'm',3, 'id',[]); ...
  struct('name','FES3','n',10, 'm',4, 'id',[]); ...
  struct('name','ZLT1','n',2,  'm',2, 'id',[]); ...
  struct('name','TKLY1','n',4, 'm',2, 'id',[]); ...
  struct('name','SK1', 'n',1,  'm',2, 'id',[]); ...
  struct('name','SK2', 'n',4,  'm',2, 'id',[]); ...
  % Newly added from refs/problems.tex
  struct('name','IM1',  'n',2,  'm',2, 'id',[]); ...
  struct('name','JOS1', 'n',10, 'm',2, 'id',[]); ...
  struct('name','JOS2', 'n',10, 'm',2, 'id',[]); ...
  struct('name','Kur1', 'n',3,  'm',2, 'id',[]); ...
  struct('name','LE1',  'n',2,  'm',2, 'id',[]); ...
  struct('name','LRS1', 'n',2,  'm',2, 'id',[]); ...
  struct('name','LTDZ1','n',3,  'm',3, 'id',[]); ...
  struct('name','MHHM1','n',1,  'm',3, 'id',[]); ...
  struct('name','MHHM2','n',2,  'm',3, 'id',[]); ...
  struct('name','MLF1', 'n',1,  'm',2, 'id',[]); ...
  struct('name','MLF2', 'n',2,  'm',2, 'id',[]); ...
  struct('name','QV1',  'n',10, 'm',2, 'id',[]); ...
  struct('name','Sch1', 'n',1,  'm',2, 'id',[])
];

end
